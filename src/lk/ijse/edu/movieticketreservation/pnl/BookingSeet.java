/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.edu.movieticketreservation.pnl;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.runtime.JSType.isNumber;
import lk.ijse.edu.movieticketreservation.controller.ManageDetailsMealController;
import lk.ijse.edu.movieticketreservation.controller.ManageMealController;
import lk.ijse.edu.movieticketreservation.controller.ResavationController;
import lk.ijse.edu.movieticketreservation.controller.SeateTypeController;
import lk.ijse.edu.movieticketreservation.mdel.CustomerDTO;
import lk.ijse.edu.movieticketreservation.mdel.MealDTO;
import lk.ijse.edu.movieticketreservation.mdel.MealdetaiDTO;
import lk.ijse.edu.movieticketreservation.mdel.PaymentDTO;
import lk.ijse.edu.movieticketreservation.mdel.ReservationDTO;
import lk.ijse.edu.movieticketresevation.Generator.IDGenerator;

/**
 *
 * @author sachin dilshan
 */
public class BookingSeet extends javax.swing.JPanel {

    private static ShowMoving a = new ShowMoving();
    private double allTotal;
    private String ODCBOXID = "OB002";
    private int poss;
    private String BALCONYBOX = "BB002";
    private String mName;
    private String BALCONY = "BN001";
    String mid;
    private String ODC = "ON001";
    private double total = 0.0;
    private double seatTotal = 0.0;

    /**
     * Creates new form BookingSeet
     */
    public BookingSeet() {
        initComponents();

    }

    public BookingSeet(String mid, String mName) {
        initComponents();
        loodAllMeaID();
        GeneratoeCustomerID();
        GeneratoePaymentID();
        GeneraterResvation();
        NowDate();
        NowTime();
        this.mid = mid;
        this.mName = mName;
        lblMovieName.setText(mName);
        lblMovieID.setText(mid);
        tblSeat.selectAll();
        Stock();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlODC = new javax.swing.JPanel();
        lblA2 = new javax.swing.JLabel();
        lblA7 = new javax.swing.JLabel();
        lblA1 = new javax.swing.JLabel();
        lblA19 = new javax.swing.JLabel();
        lblA20 = new javax.swing.JLabel();
        lblA21 = new javax.swing.JLabel();
        lblA22 = new javax.swing.JLabel();
        lblA24 = new javax.swing.JLabel();
        lblA14 = new javax.swing.JLabel();
        lblA15 = new javax.swing.JLabel();
        lblA17 = new javax.swing.JLabel();
        lblA18 = new javax.swing.JLabel();
        lblA16 = new javax.swing.JLabel();
        lblA9 = new javax.swing.JLabel();
        lblA10 = new javax.swing.JLabel();
        lblA11 = new javax.swing.JLabel();
        lblA13 = new javax.swing.JLabel();
        lblA12 = new javax.swing.JLabel();
        lblA3 = new javax.swing.JLabel();
        lblA4 = new javax.swing.JLabel();
        lblA5 = new javax.swing.JLabel();
        lblA6 = new javax.swing.JLabel();
        lblA8 = new javax.swing.JLabel();
        lblA23 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblB7 = new javax.swing.JLabel();
        lblB19 = new javax.swing.JLabel();
        lblB20 = new javax.swing.JLabel();
        lblB21 = new javax.swing.JLabel();
        lblB22 = new javax.swing.JLabel();
        lblB23 = new javax.swing.JLabel();
        lblB14 = new javax.swing.JLabel();
        lblB15 = new javax.swing.JLabel();
        lblB17 = new javax.swing.JLabel();
        lblB18 = new javax.swing.JLabel();
        lblB16 = new javax.swing.JLabel();
        lblB9 = new javax.swing.JLabel();
        lblB10 = new javax.swing.JLabel();
        lblB11 = new javax.swing.JLabel();
        lblB13 = new javax.swing.JLabel();
        lblB12 = new javax.swing.JLabel();
        lblB8 = new javax.swing.JLabel();
        lblB24 = new javax.swing.JLabel();
        lblB1 = new javax.swing.JLabel();
        lblB2 = new javax.swing.JLabel();
        lblB3 = new javax.swing.JLabel();
        lblB4 = new javax.swing.JLabel();
        lblB5 = new javax.swing.JLabel();
        lblB6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblOb1 = new javax.swing.JLabel();
        lblOb2 = new javax.swing.JLabel();
        lblOb3 = new javax.swing.JLabel();
        lblOb4 = new javax.swing.JLabel();
        lblOb5 = new javax.swing.JLabel();
        lblOb16 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblBb1 = new javax.swing.JLabel();
        lblBb2 = new javax.swing.JLabel();
        lblBb3 = new javax.swing.JLabel();
        lblBb4 = new javax.swing.JLabel();
        lblBb5 = new javax.swing.JLabel();
        lblBb6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIDnumber = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblT = new javax.swing.JLabel();
        lblD = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel70 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        comboMial = new javax.swing.JComboBox<>();
        txtPrice = new javax.swing.JTextField();
        txtQutAndHand = new javax.swing.JTextField();
        txtMealName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lblQty = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSeat = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        mealTable = new javax.swing.JTable();
        jLabel66 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        lblMovieName = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        txtPayment = new javax.swing.JTextField();
        lblRID = new javax.swing.JLabel();
        lblMovieID = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPaymentId = new javax.swing.JTextField();
        txtBlance = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtResID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        butRefresh = new javax.swing.JButton();
        butPrint = new javax.swing.JButton();
        butRemove = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtSeatCount = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblPrint = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlODC.setBackground(new java.awt.Color(204, 204, 204));
        pnlODC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        lblA2.setBackground(new java.awt.Color(153, 153, 153));
        lblA2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA2.setForeground(new java.awt.Color(0, 51, 51));
        lblA2.setText("  A2");
        lblA2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA2.setOpaque(true);
        lblA2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA2MouseClicked(evt);
            }
        });

        lblA7.setBackground(new java.awt.Color(153, 153, 153));
        lblA7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA7.setForeground(new java.awt.Color(0, 51, 51));
        lblA7.setText("  A7");
        lblA7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA7.setOpaque(true);
        lblA7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA7MouseClicked(evt);
            }
        });

        lblA1.setBackground(new java.awt.Color(153, 153, 153));
        lblA1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA1.setForeground(new java.awt.Color(0, 51, 51));
        lblA1.setText("  A1");
        lblA1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA1.setOpaque(true);
        lblA1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblA1MousePressed(evt);
            }
        });

        lblA19.setBackground(new java.awt.Color(153, 153, 153));
        lblA19.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA19.setForeground(new java.awt.Color(0, 51, 51));
        lblA19.setText("  A19");
        lblA19.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA19.setOpaque(true);
        lblA19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA19MouseClicked(evt);
            }
        });

        lblA20.setBackground(new java.awt.Color(153, 153, 153));
        lblA20.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA20.setForeground(new java.awt.Color(0, 51, 51));
        lblA20.setText("  A20");
        lblA20.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA20.setOpaque(true);
        lblA20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA20MouseClicked(evt);
            }
        });

        lblA21.setBackground(new java.awt.Color(153, 153, 153));
        lblA21.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA21.setForeground(new java.awt.Color(0, 51, 51));
        lblA21.setText("  A21");
        lblA21.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA21.setOpaque(true);
        lblA21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA21MouseClicked(evt);
            }
        });

        lblA22.setBackground(new java.awt.Color(153, 153, 153));
        lblA22.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA22.setForeground(new java.awt.Color(0, 51, 51));
        lblA22.setText("  A22");
        lblA22.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA22.setOpaque(true);
        lblA22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA22MouseClicked(evt);
            }
        });

        lblA24.setBackground(new java.awt.Color(153, 153, 153));
        lblA24.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA24.setForeground(new java.awt.Color(0, 51, 51));
        lblA24.setText("  A24");
        lblA24.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA24.setOpaque(true);
        lblA24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA24MouseClicked(evt);
            }
        });

        lblA14.setBackground(new java.awt.Color(153, 153, 153));
        lblA14.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA14.setForeground(new java.awt.Color(0, 51, 51));
        lblA14.setText("  A14");
        lblA14.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA14.setOpaque(true);
        lblA14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA14MouseClicked(evt);
            }
        });

        lblA15.setBackground(new java.awt.Color(153, 153, 153));
        lblA15.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA15.setForeground(new java.awt.Color(0, 51, 51));
        lblA15.setText("  A15");
        lblA15.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA15.setOpaque(true);
        lblA15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA15MouseClicked(evt);
            }
        });

        lblA17.setBackground(new java.awt.Color(153, 153, 153));
        lblA17.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA17.setForeground(new java.awt.Color(0, 51, 51));
        lblA17.setText("  A17");
        lblA17.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA17.setOpaque(true);
        lblA17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA17MouseClicked(evt);
            }
        });

        lblA18.setBackground(new java.awt.Color(153, 153, 153));
        lblA18.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA18.setForeground(new java.awt.Color(0, 51, 51));
        lblA18.setText("  A18");
        lblA18.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA18.setOpaque(true);
        lblA18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA18MouseClicked(evt);
            }
        });

        lblA16.setBackground(new java.awt.Color(153, 153, 153));
        lblA16.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA16.setForeground(new java.awt.Color(0, 51, 51));
        lblA16.setText("  A16");
        lblA16.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA16.setOpaque(true);
        lblA16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA16MouseClicked(evt);
            }
        });

        lblA9.setBackground(new java.awt.Color(153, 153, 153));
        lblA9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA9.setForeground(new java.awt.Color(0, 51, 51));
        lblA9.setText("  A9");
        lblA9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA9.setOpaque(true);
        lblA9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA9MouseClicked(evt);
            }
        });

        lblA10.setBackground(new java.awt.Color(153, 153, 153));
        lblA10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA10.setForeground(new java.awt.Color(0, 51, 51));
        lblA10.setText("  A10");
        lblA10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA10.setOpaque(true);
        lblA10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA10MouseClicked(evt);
            }
        });

        lblA11.setBackground(new java.awt.Color(153, 153, 153));
        lblA11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA11.setForeground(new java.awt.Color(0, 51, 51));
        lblA11.setText("  A11");
        lblA11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA11.setOpaque(true);
        lblA11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA11MouseClicked(evt);
            }
        });

        lblA13.setBackground(new java.awt.Color(153, 153, 153));
        lblA13.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA13.setForeground(new java.awt.Color(0, 51, 51));
        lblA13.setText("  A13");
        lblA13.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA13.setOpaque(true);
        lblA13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA13MouseClicked(evt);
            }
        });

        lblA12.setBackground(new java.awt.Color(153, 153, 153));
        lblA12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA12.setForeground(new java.awt.Color(0, 51, 51));
        lblA12.setText("  A12");
        lblA12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA12.setOpaque(true);
        lblA12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA12MouseClicked(evt);
            }
        });

        lblA3.setBackground(new java.awt.Color(153, 153, 153));
        lblA3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA3.setForeground(new java.awt.Color(0, 51, 51));
        lblA3.setText("  A3");
        lblA3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA3.setOpaque(true);
        lblA3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA3MouseClicked(evt);
            }
        });

        lblA4.setBackground(new java.awt.Color(153, 153, 153));
        lblA4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA4.setForeground(new java.awt.Color(0, 51, 51));
        lblA4.setText("  A4");
        lblA4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA4.setOpaque(true);
        lblA4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA4MouseClicked(evt);
            }
        });

        lblA5.setBackground(new java.awt.Color(153, 153, 153));
        lblA5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA5.setForeground(new java.awt.Color(0, 51, 51));
        lblA5.setText("  A5");
        lblA5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA5.setOpaque(true);
        lblA5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA5MouseClicked(evt);
            }
        });

        lblA6.setBackground(new java.awt.Color(153, 153, 153));
        lblA6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA6.setForeground(new java.awt.Color(0, 51, 51));
        lblA6.setText("  A6");
        lblA6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA6.setOpaque(true);
        lblA6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA6MouseClicked(evt);
            }
        });

        lblA8.setBackground(new java.awt.Color(153, 153, 153));
        lblA8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA8.setForeground(new java.awt.Color(0, 51, 51));
        lblA8.setText("  A8");
        lblA8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA8.setOpaque(true);
        lblA8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA8MouseClicked(evt);
            }
        });

        lblA23.setBackground(new java.awt.Color(153, 153, 153));
        lblA23.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblA23.setForeground(new java.awt.Color(0, 51, 51));
        lblA23.setText("  A23");
        lblA23.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblA23.setOpaque(true);
        lblA23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblA23MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlODCLayout = new javax.swing.GroupLayout(pnlODC);
        pnlODC.setLayout(pnlODCLayout);
        pnlODCLayout.setHorizontalGroup(
            pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlODCLayout.createSequentialGroup()
                .addComponent(lblA1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblA2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblA3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblA4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblA5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblA6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlODCLayout.createSequentialGroup()
                .addComponent(lblA13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblA14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlODCLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblA15, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblA16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblA17, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblA18, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlODCLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(lblA22, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblA23, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblA24, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(pnlODCLayout.createSequentialGroup()
                .addGroup(pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlODCLayout.createSequentialGroup()
                        .addComponent(lblA7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblA8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblA9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblA10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblA11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblA12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlODCLayout.createSequentialGroup()
                        .addComponent(lblA19, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblA20, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblA21, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlODCLayout.setVerticalGroup(
            pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlODCLayout.createSequentialGroup()
                .addGroup(pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblA3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblA1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblA8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblA7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblA15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblA13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA17, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA18, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlODCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblA20, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA21, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA22, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA23, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA24, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblA19, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(pnlODC, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 300, -1));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 0)));

        lblB7.setBackground(new java.awt.Color(153, 153, 153));
        lblB7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB7.setForeground(new java.awt.Color(0, 51, 51));
        lblB7.setText("  B7");
        lblB7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB7.setOpaque(true);
        lblB7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB7MouseClicked(evt);
            }
        });

        lblB19.setBackground(new java.awt.Color(153, 153, 153));
        lblB19.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB19.setForeground(new java.awt.Color(0, 51, 51));
        lblB19.setText("  B19");
        lblB19.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB19.setOpaque(true);
        lblB19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB19MouseClicked(evt);
            }
        });

        lblB20.setBackground(new java.awt.Color(153, 153, 153));
        lblB20.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB20.setForeground(new java.awt.Color(0, 51, 51));
        lblB20.setText(" B20");
        lblB20.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB20.setOpaque(true);
        lblB20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB20MouseClicked(evt);
            }
        });

        lblB21.setBackground(new java.awt.Color(153, 153, 153));
        lblB21.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB21.setForeground(new java.awt.Color(0, 51, 51));
        lblB21.setText("  B21");
        lblB21.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB21.setOpaque(true);
        lblB21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB21MouseClicked(evt);
            }
        });

        lblB22.setBackground(new java.awt.Color(153, 153, 153));
        lblB22.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB22.setForeground(new java.awt.Color(0, 51, 51));
        lblB22.setText("  B22");
        lblB22.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB22.setOpaque(true);
        lblB22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB22MouseClicked(evt);
            }
        });

        lblB23.setBackground(new java.awt.Color(153, 153, 153));
        lblB23.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB23.setForeground(new java.awt.Color(0, 51, 51));
        lblB23.setText("  B23");
        lblB23.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB23.setOpaque(true);
        lblB23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB23MouseClicked(evt);
            }
        });

        lblB14.setBackground(new java.awt.Color(153, 153, 153));
        lblB14.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB14.setForeground(new java.awt.Color(0, 51, 51));
        lblB14.setText("  B14");
        lblB14.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB14.setOpaque(true);
        lblB14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB14MouseClicked(evt);
            }
        });

        lblB15.setBackground(new java.awt.Color(153, 153, 153));
        lblB15.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB15.setForeground(new java.awt.Color(0, 51, 51));
        lblB15.setText("  B15");
        lblB15.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB15.setOpaque(true);
        lblB15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB15MouseClicked(evt);
            }
        });

        lblB17.setBackground(new java.awt.Color(153, 153, 153));
        lblB17.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB17.setForeground(new java.awt.Color(0, 51, 51));
        lblB17.setText("  B17");
        lblB17.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB17.setOpaque(true);
        lblB17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB17MouseClicked(evt);
            }
        });

        lblB18.setBackground(new java.awt.Color(153, 153, 153));
        lblB18.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB18.setForeground(new java.awt.Color(0, 51, 51));
        lblB18.setText(" B18");
        lblB18.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB18.setOpaque(true);
        lblB18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB18MouseClicked(evt);
            }
        });

        lblB16.setBackground(new java.awt.Color(153, 153, 153));
        lblB16.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB16.setForeground(new java.awt.Color(0, 51, 51));
        lblB16.setText("  B16");
        lblB16.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB16.setOpaque(true);
        lblB16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB16MouseClicked(evt);
            }
        });

        lblB9.setBackground(new java.awt.Color(153, 153, 153));
        lblB9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB9.setForeground(new java.awt.Color(0, 51, 51));
        lblB9.setText("  B9");
        lblB9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB9.setOpaque(true);
        lblB9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB9MouseClicked(evt);
            }
        });

        lblB10.setBackground(new java.awt.Color(153, 153, 153));
        lblB10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB10.setForeground(new java.awt.Color(0, 51, 51));
        lblB10.setText("  B10");
        lblB10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB10.setOpaque(true);
        lblB10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB10MouseClicked(evt);
            }
        });

        lblB11.setBackground(new java.awt.Color(153, 153, 153));
        lblB11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB11.setForeground(new java.awt.Color(0, 51, 51));
        lblB11.setText("  B11");
        lblB11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB11.setOpaque(true);
        lblB11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB11MouseClicked(evt);
            }
        });

        lblB13.setBackground(new java.awt.Color(153, 153, 153));
        lblB13.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB13.setForeground(new java.awt.Color(0, 51, 51));
        lblB13.setText("  B13");
        lblB13.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB13.setOpaque(true);
        lblB13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB13MouseClicked(evt);
            }
        });

        lblB12.setBackground(new java.awt.Color(153, 153, 153));
        lblB12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB12.setForeground(new java.awt.Color(0, 51, 51));
        lblB12.setText("  B12");
        lblB12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB12.setOpaque(true);
        lblB12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB12MouseClicked(evt);
            }
        });

        lblB8.setBackground(new java.awt.Color(153, 153, 153));
        lblB8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB8.setForeground(new java.awt.Color(0, 51, 51));
        lblB8.setText("  B8");
        lblB8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB8.setOpaque(true);
        lblB8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB8MouseClicked(evt);
            }
        });

        lblB24.setBackground(new java.awt.Color(153, 153, 153));
        lblB24.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB24.setForeground(new java.awt.Color(0, 51, 51));
        lblB24.setText("  B24");
        lblB24.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB24.setOpaque(true);
        lblB24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB24MouseClicked(evt);
            }
        });

        lblB1.setBackground(new java.awt.Color(153, 153, 153));
        lblB1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB1.setForeground(new java.awt.Color(0, 51, 51));
        lblB1.setText("  B1");
        lblB1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB1.setOpaque(true);
        lblB1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB1MouseClicked(evt);
            }
        });

        lblB2.setBackground(new java.awt.Color(153, 153, 153));
        lblB2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB2.setForeground(new java.awt.Color(0, 51, 51));
        lblB2.setText("  B2");
        lblB2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB2.setOpaque(true);
        lblB2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB2MouseClicked(evt);
            }
        });

        lblB3.setBackground(new java.awt.Color(153, 153, 153));
        lblB3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB3.setForeground(new java.awt.Color(0, 51, 51));
        lblB3.setText("  B3");
        lblB3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB3.setOpaque(true);
        lblB3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB3MouseClicked(evt);
            }
        });

        lblB4.setBackground(new java.awt.Color(153, 153, 153));
        lblB4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB4.setForeground(new java.awt.Color(0, 51, 51));
        lblB4.setText("   B4");
        lblB4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB4.setOpaque(true);
        lblB4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB4MouseClicked(evt);
            }
        });

        lblB5.setBackground(new java.awt.Color(153, 153, 153));
        lblB5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB5.setForeground(new java.awt.Color(0, 51, 51));
        lblB5.setText("  B5");
        lblB5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB5.setOpaque(true);
        lblB5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB5MouseClicked(evt);
            }
        });

        lblB6.setBackground(new java.awt.Color(153, 153, 153));
        lblB6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblB6.setForeground(new java.awt.Color(0, 51, 51));
        lblB6.setText("B6");
        lblB6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblB6.setOpaque(true);
        lblB6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblB6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblB19, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB20, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB21, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB22, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB23, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB24, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblB1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblB7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblB13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB15, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB17, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblB18, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblB1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblB7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblB13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB15, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB17, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB18, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblB19, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB20, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB21, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB22, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB23, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB24, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, -1, 200));

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        lblOb1.setBackground(new java.awt.Color(153, 153, 153));
        lblOb1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblOb1.setForeground(new java.awt.Color(0, 51, 51));
        lblOb1.setText("  OB1");
        lblOb1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblOb1.setOpaque(true);
        lblOb1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOb1MouseClicked(evt);
            }
        });

        lblOb2.setBackground(new java.awt.Color(153, 153, 153));
        lblOb2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblOb2.setForeground(new java.awt.Color(0, 51, 51));
        lblOb2.setText(" OB2");
        lblOb2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblOb2.setOpaque(true);
        lblOb2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOb2MouseClicked(evt);
            }
        });

        lblOb3.setBackground(new java.awt.Color(153, 153, 153));
        lblOb3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblOb3.setForeground(new java.awt.Color(0, 51, 51));
        lblOb3.setText(" OB3");
        lblOb3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblOb3.setOpaque(true);
        lblOb3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOb3MouseClicked(evt);
            }
        });

        lblOb4.setBackground(new java.awt.Color(153, 153, 153));
        lblOb4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblOb4.setForeground(new java.awt.Color(0, 51, 51));
        lblOb4.setText(" OB4");
        lblOb4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblOb4.setOpaque(true);
        lblOb4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOb4MouseClicked(evt);
            }
        });

        lblOb5.setBackground(new java.awt.Color(153, 153, 153));
        lblOb5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblOb5.setForeground(new java.awt.Color(0, 51, 51));
        lblOb5.setText(" OB5");
        lblOb5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblOb5.setOpaque(true);
        lblOb5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOb5MouseClicked(evt);
            }
        });

        lblOb16.setBackground(new java.awt.Color(153, 153, 153));
        lblOb16.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblOb16.setForeground(new java.awt.Color(0, 51, 51));
        lblOb16.setText(" OB6");
        lblOb16.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblOb16.setOpaque(true);
        lblOb16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOb16MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(lblOb1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblOb2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblOb3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblOb4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblOb5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblOb16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblOb1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(lblOb2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblOb16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblOb5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblOb3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblOb4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 296, -1));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 51)));

        lblBb1.setBackground(new java.awt.Color(153, 153, 153));
        lblBb1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblBb1.setForeground(new java.awt.Color(0, 51, 51));
        lblBb1.setText(" BB1");
        lblBb1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblBb1.setOpaque(true);
        lblBb1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBb1MouseClicked(evt);
            }
        });

        lblBb2.setBackground(new java.awt.Color(153, 153, 153));
        lblBb2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblBb2.setForeground(new java.awt.Color(0, 51, 51));
        lblBb2.setText(" BB2");
        lblBb2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblBb2.setOpaque(true);
        lblBb2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBb2MouseClicked(evt);
            }
        });

        lblBb3.setBackground(new java.awt.Color(153, 153, 153));
        lblBb3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblBb3.setForeground(new java.awt.Color(0, 51, 51));
        lblBb3.setText(" BB3");
        lblBb3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblBb3.setOpaque(true);
        lblBb3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBb3MouseClicked(evt);
            }
        });

        lblBb4.setBackground(new java.awt.Color(153, 153, 153));
        lblBb4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblBb4.setForeground(new java.awt.Color(0, 51, 51));
        lblBb4.setText(" BB4");
        lblBb4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblBb4.setOpaque(true);
        lblBb4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBb4MouseClicked(evt);
            }
        });

        lblBb5.setBackground(new java.awt.Color(153, 153, 153));
        lblBb5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblBb5.setForeground(new java.awt.Color(0, 51, 51));
        lblBb5.setText(" BB5");
        lblBb5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblBb5.setOpaque(true);
        lblBb5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBb5MouseClicked(evt);
            }
        });

        lblBb6.setBackground(new java.awt.Color(153, 153, 153));
        lblBb6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblBb6.setForeground(new java.awt.Color(0, 51, 51));
        lblBb6.setText("BB6");
        lblBb6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        lblBb6.setOpaque(true);
        lblBb6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBb6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(lblBb1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBb2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBb3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBb4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBb5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBb6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblBb6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(lblBb5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBb4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBb3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBb1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBb2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 330, -1, -1));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 51, 0));
        jLabel10.setText("ODC");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 190, 30));

        jLabel63.setBackground(new java.awt.Color(255, 255, 255));
        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(0, 51, 0));
        jLabel63.setText("Balcony");
        add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 110, 30));

        jLabel64.setBackground(new java.awt.Color(255, 255, 255));
        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(0, 51, 0));
        jLabel64.setText("ODC - BOX");
        add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 160, 30));

        jLabel65.setBackground(new java.awt.Color(255, 255, 255));
        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(0, 51, 0));
        jLabel65.setText("Balcony - BOX");
        add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, 150, 20));

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        jLabel67.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(0, 51, 0));
        jLabel67.setText("Customer Name");

        jLabel68.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(0, 51, 0));
        jLabel68.setText("Contact No");

        txtName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtContact.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactActionPerformed(evt);
            }
        });
        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContactKeyReleased(evt);
            }
        });

        jLabel69.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(0, 51, 0));
        jLabel69.setText("Customer Details");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 0));
        jLabel5.setText("Customer ID");

        txtIDnumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtIDnumber.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtIDnumberMouseEntered(evt);
            }
        });
        txtIDnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDnumberActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 0));
        jLabel7.setText("Date");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 0));
        jLabel8.setText("Time");

        lblT.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        lblD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(37, 37, 37)
                            .addComponent(txtIDnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel69))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel67)
                            .addComponent(jLabel68)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                .addComponent(lblT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel69)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel67))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(lblD, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(lblT, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, 300, 210));

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        jLabel70.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(0, 51, 0));
        jLabel70.setText("Buy Meals");

        jLabel87.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel87.setForeground(new java.awt.Color(0, 51, 0));
        jLabel87.setText("Meal Name   ");

        jLabel88.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel88.setForeground(new java.awt.Color(0, 51, 0));
        jLabel88.setText("Unit Price     ");

        jLabel89.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel89.setForeground(new java.awt.Color(0, 51, 0));
        jLabel89.setText("  Qty On Hand   ");

        comboMial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        comboMial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboMialItemStateChanged(evt);
            }
        });
        comboMial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMialActionPerformed(evt);
            }
        });

        txtPrice.setEditable(false);
        txtPrice.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPriceKeyReleased(evt);
            }
        });

        txtQutAndHand.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtQutAndHand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQutAndHandActionPerformed(evt);
            }
        });
        txtQutAndHand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQutAndHandKeyReleased(evt);
            }
        });

        txtMealName.setEditable(false);
        txtMealName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 0));
        jLabel6.setText("MealId");

        lblQty.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblQty.setForeground(new java.awt.Color(255, 51, 51));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 22)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Current QTY");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel70))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMealName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(txtQutAndHand, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboMial, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQty, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel70)
                .addGap(12, 12, 12)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(comboMial, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMealName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQutAndHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblQty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 300, 300, 240));

        tblSeat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tblSeat.setForeground(new java.awt.Color(102, 0, 0));
        tblSeat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seat Type", "Price"
            }
        ));
        tblSeat.setGridColor(new java.awt.Color(255, 0, 0));
        tblSeat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSeatMouseClicked(evt);
            }
        });
        tblSeat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblSeatKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblSeat);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, 300, 80));

        mealTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        mealTable.setForeground(new java.awt.Color(102, 0, 0));
        mealTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meails name", "Qty", "Cost"
            }
        ));
        mealTable.setGridColor(new java.awt.Color(255, 255, 255));
        mealTable.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        mealTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mealTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(mealTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 430, 310, 80));

        jLabel66.setBackground(new java.awt.Color(255, 255, 255));
        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(0, 51, 0));
        jLabel66.setText("Seat Details");
        add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, -1, -1));

        jLabel72.setBackground(new java.awt.Color(255, 255, 255));
        jLabel72.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(0, 51, 0));
        jLabel72.setText("Meail Details");
        add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 400, 140, 20));

        lblMovieName.setFont(new java.awt.Font("Viner Hand ITC", 3, 36)); // NOI18N
        lblMovieName.setForeground(new java.awt.Color(255, 0, 51));
        lblMovieName.setText(" ");
        add(lblMovieName, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 20, 470, 40));

        txtTotalPrice.setEditable(false);
        txtTotalPrice.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalPriceActionPerformed(evt);
            }
        });
        txtTotalPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTotalPriceKeyReleased(evt);
            }
        });
        add(txtTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 580, 110, 30));

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(0, 51, 0));
        jLabel71.setText("Total price");
        add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 590, -1, -1));

        txtPayment.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtPayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPaymentMouseClicked(evt);
            }
        });
        txtPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaymentActionPerformed(evt);
            }
        });
        txtPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPaymentKeyReleased(evt);
            }
        });
        add(txtPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 630, 110, 30));

        lblRID.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblRID.setForeground(new java.awt.Color(255, 0, 0));
        add(lblRID, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 50, 60, 10));

        lblMovieID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMovieID.setForeground(new java.awt.Color(255, 0, 0));
        lblMovieID.setText(" ");
        add(lblMovieID, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, 0, 0));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 0));
        jLabel3.setText("Payment");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 630, -1, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 0));
        jLabel9.setText("Payment ID");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 590, 90, -1));

        txtPaymentId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        add(txtPaymentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 580, 120, 30));

        txtBlance.setEditable(false);
        txtBlance.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtBlance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBlanceActionPerformed(evt);
            }
        });
        txtBlance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBlanceKeyReleased(evt);
            }
        });
        add(txtBlance, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 630, 120, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 0));
        jLabel4.setText(" Blance");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 640, -1, -1));

        txtResID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtResID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResIDActionPerformed(evt);
            }
        });
        add(txtResID, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 530, 120, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 51, 0));
        jLabel11.setText("Reservation ID");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 540, 110, -1));

        butRefresh.setBackground(new java.awt.Color(255, 255, 255));
        butRefresh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        butRefresh.setForeground(new java.awt.Color(0, 51, 0));
        butRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/edu/movieticketreservation/img/icons8_Refresh_40px_3.png"))); // NOI18N
        butRefresh.setText(" Refresh");
        butRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                butRefreshMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                butRefreshMouseReleased(evt);
            }
        });
        butRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRefreshActionPerformed(evt);
            }
        });
        add(butRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 590, 160, 40));

        butPrint.setBackground(new java.awt.Color(255, 255, 255));
        butPrint.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        butPrint.setForeground(new java.awt.Color(0, 51, 0));
        butPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/edu/movieticketreservation/img/icons8_Print_40px.png"))); // NOI18N
        butPrint.setText("Save & print");
        butPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                butPrintMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                butPrintMouseReleased(evt);
            }
        });
        butPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butPrintActionPerformed(evt);
            }
        });
        add(butPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 590, -1, 40));

        butRemove.setBackground(new java.awt.Color(255, 255, 255));
        butRemove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        butRemove.setForeground(new java.awt.Color(0, 51, 0));
        butRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/edu/movieticketreservation/img/icons8_Trash_40px.png"))); // NOI18N
        butRemove.setText("Remove All");
        butRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                butRemoveMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                butRemoveMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                butRemoveMouseReleased(evt);
            }
        });
        butRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRemoveActionPerformed(evt);
            }
        });
        add(butRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 590, -1, 40));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 0));
        jLabel12.setText("Seat Count");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 540, 80, -1));

        txtSeatCount.setEditable(false);
        txtSeatCount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtSeatCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSeatCountActionPerformed(evt);
            }
        });
        add(txtSeatCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 530, 110, 30));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setOpaque(true);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -30, 1120, 730));

        lblPrint.setText("jLabel13");
        add(lblPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void comboMialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboMialActionPerformed

    private void lblA1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA1MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();
        if (lblA1.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA1.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            try {

                String id = lblA1.getText();
                Object[] rowData = {id, seatTotal};
                dtm.addRow(rowData);
                tblSeat.selectAll();

            } catch (Exception ex) {
                Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA1.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }

        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA1MouseClicked

    private void lblA2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA2MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();
        if (lblA2.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA2.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            try {

                String id = lblA2.getText();
                Object[] rowData = {id, seatTotal};
                dtm.addRow(rowData);
                tblSeat.selectAll();
            } catch (Exception ex) {
                Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA2.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }

        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA2MouseClicked

    private void lblA3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA3MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();
        if (lblA3.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA3.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            try {
                String id = lblA3.getText();
                Object[] rowData = {id, seatTotal};
                dtm.addRow(rowData);
                tblSeat.selectAll();
            } catch (Exception ex) {
                Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA3.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }

        }
    }//GEN-LAST:event_lblA3MouseClicked

    private void lblA4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA4MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();
        if (lblA4.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA4.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);

            String id = lblA4.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA4.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA4MouseClicked

    private void lblA5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA5MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA5.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA5.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA5.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA5.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA5MouseClicked

    private void lblA6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA6MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA6.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA6.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA6.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA6.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA6MouseClicked

    private void lblA7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA7MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA7.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA7.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA7.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA7.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA7MouseClicked

    private void lblA8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA8MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA8.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA8.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA8.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA8.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA8MouseClicked

    private void lblA9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA9MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA9.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA9.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA9.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA9.setEnabled(true);
            RemoveValues(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA9MouseClicked

    private void lblA10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA10MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA10.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA10.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA10.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA10.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA10MouseClicked

    private void lblA11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA11MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA11.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA11.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA11.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA11.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA11MouseClicked

    private void lblA12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA12MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA12.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA12.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA12.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA12.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
    }//GEN-LAST:event_lblA12MouseClicked

    private void lblA13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA13MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA13.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA13.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA13.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA13.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA13MouseClicked

    private void lblA14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA14MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA14.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA14.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA14.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(null, "Is Booking");
            lblA14.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA14MouseClicked

    private void lblA15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA15MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA15.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA15.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA15.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA15.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA15MouseClicked

    private void lblA16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA16MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA16.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA16.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA16.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA16.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA16MouseClicked

    private void lblA17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA17MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA17.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA17.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA17.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA17.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA17MouseClicked

    private void lblA18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA18MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA18.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA18.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA18.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA18.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA18MouseClicked

    private void lblA19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA19MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA19.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA19.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA19.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA19.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA19MouseClicked

    private void lblA20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA20MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA20.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA20.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA10.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA20.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA20MouseClicked

    private void lblA21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA21MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA21.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA21.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA21.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA21.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
    }//GEN-LAST:event_lblA21MouseClicked

    private void lblA22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA22MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA22.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA22.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA22.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA22.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA22MouseClicked

    private void lblA23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA23MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA23.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA23.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA23.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();

        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA23.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA23MouseClicked

    private void lblA24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA24MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblA24.isEnabled()) {
            loadSeatPriceForODC(ODC);
            lblA24.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblA24.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();

        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblA24.setEnabled(true);
            RemoveValuesODC(ODC);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblA24MouseClicked

    private void lblB1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB1MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB1.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB1.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblB1.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB1.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB1MouseClicked

    private void lblB2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB2MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB2.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB2.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblB2.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB2.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB2MouseClicked

    private void lblB3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB3MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB3.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB3.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblB3.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB3.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB3MouseClicked

    private void lblB4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB4MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB4.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB4.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblB4.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB4.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB4MouseClicked

    private void lblB5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB5MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB5.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB5.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblB5.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB5.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB5MouseClicked

    private void lblB6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB6MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB6.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB6.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblB6.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB6.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
    }//GEN-LAST:event_lblB6MouseClicked

    private void lblB7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB7MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB7.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB7.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblB7.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB7.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB7MouseClicked

    private void lblB8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB8MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB8.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB8.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblB8.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB8.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB8MouseClicked

    private void lblB9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB9MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB9.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB9.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblB9.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB9.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB9MouseClicked

    private void lblB10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB10MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB10.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB10.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB10.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB10.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB10MouseClicked

    private void lblB11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB11MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB11.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB11.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB11.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB11.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB11MouseClicked

    private void lblB12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB12MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB12.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB12.setEnabled(false);
            txtSeatCount.setText("" + poss);
            String id = lblB12.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB12.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB12MouseClicked

    private void lblB13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB13MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB13.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB13.setEnabled(false);
            txtSeatCount.setText("" + poss);
            String id = lblB13.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB13.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
    }//GEN-LAST:event_lblB13MouseClicked

    private void lblB14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB14MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB14.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB14.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB14.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB14.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB14MouseClicked

    private void lblB15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB15MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB15.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB15.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB15.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB15.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB15MouseClicked

    private void lblB16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB16MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB16.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB16.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB16.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB16.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB16MouseClicked

    private void lblB17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB17MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB17.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB17.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB17.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB17.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB17MouseClicked

    private void lblB18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB18MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB18.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB18.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB18.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB18.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB18MouseClicked

    private void lblB19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB19MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB19.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB19.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB19.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB19.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB19MouseClicked

    private void lblB20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB20MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB20.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB20.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB20.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB20.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
    }//GEN-LAST:event_lblB20MouseClicked

    private void lblB21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB21MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB21.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB21.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB21.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB21.setEnabled(true);
            RemoveValuesB(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB21MouseClicked

    private void lblB22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB22MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB22.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB22.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB22.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB22.setEnabled(true);
            RemoveValues(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB22MouseClicked

    private void lblB23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB23MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB23.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB23.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB23.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB23.setEnabled(true);
            RemoveValues(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblB23MouseClicked

    private void lblB24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblB24MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblB24.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONY);
            lblB24.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            txtSeatCount.setText("" + poss);
            String id = lblB24.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblB24.setEnabled(true);
            RemoveValues(BALCONY);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
    }//GEN-LAST:event_lblB24MouseClicked

    private void lblBb1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBb1MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblBb1.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONYBOX);
            lblBb1.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblBb1.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();

        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblBb1.setEnabled(true);
            RemoveValues(BALCONYBOX);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblBb1MouseClicked

    private void lblBb2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBb2MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblBb2.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONYBOX);
            lblBb2.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblBb2.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblBb2.setEnabled(true);
            RemoveValues(BALCONYBOX);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblBb2MouseClicked

    private void lblBb3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBb3MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblBb3.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONYBOX);
            lblBb3.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblBb3.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblBb3.setEnabled(true);
            RemoveValues(BALCONYBOX);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
    }//GEN-LAST:event_lblBb3MouseClicked

    private void lblBb4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBb4MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblBb4.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONYBOX);
            lblBb4.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblBb4.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblBb4.setEnabled(true);
            RemoveValues(BALCONYBOX);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
    }//GEN-LAST:event_lblBb4MouseClicked

    private void lblBb6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBb6MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();
        if (lblBb6.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONYBOX);
            lblBb6.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblBb6.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblBb6.setEnabled(true);
            RemoveValues(BALCONYBOX);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblBb6MouseClicked

    private void lblOb1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOb1MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblOb1.isEnabled()) {
            loadSeatPriceForBALCONYBOX(ODCBOXID);
            lblOb1.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblOb1.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();

        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblOb1.setEnabled(true);
            RemoveValues(ODCBOXID);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();

    }//GEN-LAST:event_lblOb1MouseClicked

    private void lblOb2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOb2MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblOb2.isEnabled()) {
            loadSeatPriceForBALCONYBOX(ODCBOXID);
            lblOb2.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblOb2.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();

        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblOb2.setEnabled(true);
            RemoveValues(ODCBOXID);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();

    }//GEN-LAST:event_lblOb2MouseClicked

    private void lblOb3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOb3MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblOb3.isEnabled()) {
            loadSeatPriceForBALCONYBOX(ODCBOXID);
            lblOb3.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblOb3.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();

        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblOb3.setEnabled(true);
            RemoveValues(ODCBOXID);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();

    }//GEN-LAST:event_lblOb3MouseClicked

    private void lblOb4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOb4MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblOb4.isEnabled()) {
            loadSeatPriceForBALCONYBOX(ODCBOXID);
            lblOb4.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblOb4.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();

        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblOb4.setEnabled(true);
            RemoveValues(ODCBOXID);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();

    }//GEN-LAST:event_lblOb4MouseClicked

    private void lblOb5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOb5MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblOb5.isEnabled()) {
            loadSeatPriceForBALCONYBOX(ODCBOXID);
            lblOb5.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblOb5.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();

        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblOb5.setEnabled(true);
            RemoveValues(ODCBOXID);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();

    }//GEN-LAST:event_lblOb5MouseClicked

    private void lblOb16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOb16MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();

        if (lblOb16.isEnabled()) {
            loadSeatPriceForBALCONYBOX(ODCBOXID);
            lblOb16.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblOb16.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();

        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblOb16.setEnabled(true);
            RemoveValues(ODCBOXID);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();

    }//GEN-LAST:event_lblOb16MouseClicked

    private void txtPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaymentActionPerformed
        double total = Double.parseDouble(txtTotalPrice.getText());
        double payment = Double.parseDouble(txtPayment.getText());
        double blance = payment - total;
        txtBlance.setText("" + blance);
        // txtBlance.requestFocusInWindow();

    }//GEN-LAST:event_txtPaymentActionPerformed

    private void comboMialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboMialItemStateChanged
        String mealID = (String) comboMial.getSelectedItem();

        try {
            MealDTO meil = ManageMealController.serchMail(mealID);
            if (meil != null) {
                txtMealName.setText(meil.getMealName());
                txtPrice.setText("" + meil.getUnitPrice());
                lblQty.setText("" + meil.getQty());
                txtQutAndHand.requestFocusInWindow();
                Stock();

            }
            int qty = Integer.parseInt(lblQty.getText());
            if (qty < 10) {
                JOptionPane.showMessageDialog(null, "PLESS FILL YOUR STOCK..");

            }
        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_comboMialItemStateChanged

    private void txtIDnumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDnumberActionPerformed

    }//GEN-LAST:event_txtIDnumberActionPerformed

    private void txtQutAndHandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQutAndHandActionPerformed
        String qoh = txtQutAndHand.getText();

        if (qoh.matches("[0-9]{1,3}")) {

            DefaultTableModel dtm = (DefaultTableModel) mealTable.getModel();
            String meleName = txtMealName.getText();
            double price = Double.parseDouble(txtPrice.getText());
            int qty = Integer.parseInt(txtQutAndHand.getText());
            double cost = price * qty;
            total = total + cost;
            txtTotalPrice.setText(total + "");
            Object[] rowData = {meleName, qty, cost};
            dtm.addRow(rowData);
            comboMial.requestFocusInWindow();

        } else {
            JOptionPane.showMessageDialog(this, "Enter Create Amount ");
        }


    }//GEN-LAST:event_txtQutAndHandActionPerformed
    private void loadSeatPriceForODCBOX(String seatID) {
        try {
            String seatPrice = SeateTypeController.getSeatPrice(seatID);
            seatTotal = Double.parseDouble(seatPrice);
            total = total + Double.parseDouble(seatPrice);
        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadSeatPriceForBALCONYBOX(String SeatID) {
        try {
            String seatPrice = SeateTypeController.getSeatPriceBB(SeatID);
            total = total + Double.parseDouble(seatPrice);
            seatTotal = Double.parseDouble(seatPrice);
            seatTotal = Double.parseDouble(seatPrice);
            txtTotalPrice.setText(total + "");
        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadSeatPriceForBALCONY(String SeatID) {
        try {
            String seatPrice = SeateTypeController.getSeatPriceB(SeatID);
            total = total + Double.parseDouble(seatPrice);
            seatTotal = Double.parseDouble(seatPrice);
            txtTotalPrice.setText(total + "");
        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadSeatPriceForODC(String SeatID) {
        try {
            String seatPrice = SeateTypeController.getSeatPriceODC(SeatID);
            total = total + Double.parseDouble(seatPrice);
            txtTotalPrice.setText(total + "");
            seatTotal = Double.parseDouble(seatPrice);
        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loodAllMeaID() {
        try {
            ArrayList<String> allMealId = ManageMealController.getAllMeaID();
            for (String mealName : allMealId) {
                comboMial.addItem(mealName);
            }
        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void NowDate() {
        lblD.setText(LocalDate.now().toString());
    }

    private void NowTime() {
        new Thread(() -> {
            while (true) {
                Date date = new Date();
                String currentdate = new SimpleDateFormat("hh:mm:ss aa").format(date);

                lblT.setText(currentdate);
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {

                }
            }
        }).start();
    }

    private void RemoveValues(String SeatID) {
        try {
            String seatPrice = SeateTypeController.getSeatPriceBB(SeatID);
            total = total - Double.parseDouble(seatPrice);
            txtTotalPrice.setText(total + "");
        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void RemoveValuesB(String SeatID) {
        try {
            String seatPrice = SeateTypeController.getSeatPriceB(SeatID);
            total = total - Double.parseDouble(seatPrice);
            txtTotalPrice.setText(total + "");
        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void RemoveValuesODC(String SeatID) {
        try {
            String seatPrice = SeateTypeController.getSeatPriceODC(SeatID);
            total = total - Double.parseDouble(seatPrice);
            txtTotalPrice.setText(total + "");
        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void RemoveODCBOX(String seatID) {
        try {
            String seatPrice = SeateTypeController.getSeatPrice(seatID);
            total = total - Double.parseDouble(seatPrice);
            txtTotalPrice.setText(total + "");
        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void txtContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactActionPerformed

    }//GEN-LAST:event_txtContactActionPerformed

    private boolean isValidTP(String input) {

        if (input.length() == 11) {

            String dash = input.substring(3, 4);

            if (dash.equals("-")) {

                input = input.replace("-", "");

                if (isNumber(input)) {
                    return true;
                }

            }

        }

        return false;

    }
    private void txtTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalPriceActionPerformed

    }//GEN-LAST:event_txtTotalPriceActionPerformed

    private void lblA1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblA1MousePressed

    }//GEN-LAST:event_lblA1MousePressed

    private void txtIDnumberMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIDnumberMouseEntered

    }//GEN-LAST:event_txtIDnumberMouseEntered

    private void lblBb5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBb5MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();
        if (lblBb5.isEnabled()) {
            loadSeatPriceForBALCONYBOX(BALCONYBOX);
            lblBb5.setEnabled(false);
            ++poss;
            txtSeatCount.setText("" + poss);
            String id = lblBb5.getText();
            Object[] rowData = {id, seatTotal};
            dtm.addRow(rowData);
            tblSeat.selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Are you Sure Calcel Booking");
            lblBb5.setEnabled(true);
            RemoveValues(BALCONYBOX);
            --poss;
            txtSeatCount.setText("" + poss);
            int rowNumber = tblSeat.getSelectedRow();
            if (rowNumber != -1) {
                dtm.removeRow(rowNumber);
            }
        }
        txtPayment.requestFocusInWindow();
    }//GEN-LAST:event_lblBb5MouseClicked

    private void txtBlanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBlanceActionPerformed

    }//GEN-LAST:event_txtBlanceActionPerformed

    private void txtPaymentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPaymentMouseClicked
//        txtBlance.requestFocusInWindow();
    }//GEN-LAST:event_txtPaymentMouseClicked

    private void txtResIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResIDActionPerformed
        
    }//GEN-LAST:event_txtResIDActionPerformed

    private void txtSeatCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSeatCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSeatCountActionPerformed

    private void butRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRemoveActionPerformed
        lblBb6.setEnabled(true);
    }//GEN-LAST:event_butRemoveActionPerformed

    private void butPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPrintActionPerformed
        try {
//            String supplierName = txtName.getText();
//
//            if (supplierName.trim().isEmpty()) {
//                JOptionPane.showMessageDialog(this, "Please enter a customer name");
//                txtName.selectAll();
//                txtName.requestFocusInWindow();
//                return;
//            }
//            String telephone = txtContact.getText();
//
//            if (!telephone.matches("\\d{3}-\\d{7}")) {
//                JOptionPane.showMessageDialog(this, "Please enter valid telephone number");
//                txtContact.selectAll();
//                txtContact.requestFocusInWindow();
//                return;
//            }
//            String qtyonHand = txtQutAndHand.getText();
//
//            if (!qtyonHand.matches("[0-9]")) {
//                JOptionPane.showMessageDialog(this, "Please enter a valid Qty");
//                txtQutAndHand.selectAll();
//                txtQutAndHand.requestFocusInWindow();
//                return;
//            }
//            String payment = txtPayment.getText();
//
//            if (!payment.matches("[0-9 .]+")) {
//                JOptionPane.showMessageDialog(this, "Please enter a valid Amount");
//                txtPayment.selectAll();
//                txtPayment.requestFocusInWindow();
//                return;
//            }
            CustomerDTO customerDTO = new CustomerDTO(txtIDnumber.getText(), txtName.getText(), txtContact.getText(), lblD.getText(), lblT.getText());
            PaymentDTO paymentDTO = new PaymentDTO(txtPaymentId.getText(), Double.parseDouble(txtTotalPrice.getText()));
            ReservationDTO reservationDTO = new ReservationDTO(txtResID.getText(), paymentDTO, customerDTO, Integer.parseInt(txtSeatCount.getText()), lblMovieID.getText(), lblD.getText(), lblT.getText());
            boolean added = ResavationController.addResavation(reservationDTO);
            String custId = txtIDnumber.getText();
            String mealId = (String) comboMial.getSelectedItem();
            int qtys = Integer.parseInt(txtQutAndHand.getText());
            MealdetaiDTO mealdetais = new MealdetaiDTO(custId, mealId, qtys);
            boolean isAdded = ManageDetailsMealController.addDetails(mealdetais);

            if (added) {
                JOptionPane.showMessageDialog(BookingSeet.this, "added !");
                allTotal = allTotal + Double.parseDouble(txtTotalPrice.getText());

                txtBlance.setText("");
                txtPayment.setText("");
                txtTotalPrice.setText("");
                txtSeatCount.setText("");
                txtName.setText("");
                txtContact.setText("");
                txtQutAndHand.setText("");
                poss = 0;
                total = 0;
                DefaultTableModel dtm = (DefaultTableModel) tblSeat.getModel();
                int rowNumber = tblSeat.getSelectedRow();
                if (rowNumber != -1) {
                    dtm.removeRow(rowNumber);
                }

                GeneratoeCustomerID();
                GeneratoePaymentID();
                GeneraterResvation();

            } else {
                JOptionPane.showMessageDialog(BookingSeet.this, "Not added !");
            }

        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_butPrintActionPerformed

    private void butRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRefreshActionPerformed
        if (true) {
            JOptionPane.showConfirmDialog(txtSeatCount, mName);
            lblA1.setEnabled(true);
            lblA2.setEnabled(true);
            lblA3.setEnabled(true);
            lblA4.setEnabled(true);
            lblA5.setEnabled(true);
            lblA6.setEnabled(true);
            lblA7.setEnabled(true);
            lblA8.setEnabled(true);
            lblA9.setEnabled(true);
            lblA10.setEnabled(true);
            lblA11.setEnabled(true);
            lblA12.setEnabled(true);
            lblA13.setEnabled(true);
            lblA14.setEnabled(true);
            lblA15.setEnabled(true);
            lblA16.setEnabled(true);
            lblA17.setEnabled(true);
            lblA18.setEnabled(true);
            lblA19.setEnabled(true);
            lblA20.setEnabled(true);
            lblA21.setEnabled(true);
            lblA22.setEnabled(true);
            lblA23.setEnabled(true);
            lblA24.setEnabled(true);
            lblB1.setEnabled(true);
            lblB2.setEnabled(true);
            lblB3.setEnabled(true);
            lblB4.setEnabled(true);
            lblB5.setEnabled(true);
            lblB6.setEnabled(true);
            lblB7.setEnabled(true);
            lblB8.setEnabled(true);
            lblB9.setEnabled(true);
            lblB10.setEnabled(true);
            lblB11.setEnabled(true);
            lblB12.setEnabled(true);
            lblB13.setEnabled(true);
            lblB14.setEnabled(true);
            lblB15.setEnabled(true);
            lblB16.setEnabled(true);
            lblB17.setEnabled(true);
            lblB18.setEnabled(true);
            lblB18.setEnabled(true);
            lblB20.setEnabled(true);
            lblB11.setEnabled(true);
            lblB22.setEnabled(true);
            lblB23.setEnabled(true);
            lblB24.setEnabled(true);
            lblOb1.setEnabled(true);
            lblOb2.setEnabled(true);
            lblOb3.setEnabled(true);
            lblOb4.setEnabled(true);
            lblOb5.setEnabled(true);
            lblOb16.setEnabled(true);
            lblBb1.setEnabled(true);
            lblBb2.setEnabled(true);
            lblBb3.setEnabled(true);
            lblBb4.setEnabled(true);
            lblBb5.setEnabled(true);
            lblBb6.setEnabled(true);
        } else {
        }


    }//GEN-LAST:event_butRefreshActionPerformed

    private void butRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butRemoveMouseClicked

        // butRemove.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_butRemoveMouseClicked

    private void butRemoveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butRemoveMousePressed
        butRemove.setBackground(new Color(191, 85, 236));
    }//GEN-LAST:event_butRemoveMousePressed

    private void butRemoveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butRemoveMouseReleased
        butRemove.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_butRemoveMouseReleased

    private void butPrintMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butPrintMousePressed
        butPrint.setBackground(new Color(191, 85, 236));
    }//GEN-LAST:event_butPrintMousePressed

    private void butPrintMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butPrintMouseReleased
        butPrint.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_butPrintMouseReleased

    private void butRefreshMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butRefreshMousePressed
        butRefresh.setBackground(new Color(191, 85, 236));
    }//GEN-LAST:event_butRefreshMousePressed

    private void butRefreshMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butRefreshMouseReleased
        butRefresh.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_butRefreshMouseReleased

    private void tblSeatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSeatKeyPressed

    }//GEN-LAST:event_tblSeatKeyPressed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        txtContact.requestFocusInWindow();
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtPaymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaymentKeyReleased
        String txt = txtPayment.getText();
        int caretPosition = txtPayment.getCaretPosition();
        if (!txt.matches("^[\\d]*")) {
            txtPayment.setText(txt.substring(0, caretPosition - 1) + txt.substring(caretPosition));
            txtPayment.setCaretPosition(caretPosition - 1);
        }
    }//GEN-LAST:event_txtPaymentKeyReleased

    private void txtBlanceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBlanceKeyReleased
         String text = txtBlance.getText();
        if (!text.isEmpty()) {
            boolean res = text.matches("[0-9]+[.]?[0-9]{0,2}");
            if (!res) {
                txtBlance.setText(text.substring(0, text.length() - 1));
            }
        }
    }//GEN-LAST:event_txtBlanceKeyReleased

    private void txtTotalPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalPriceKeyReleased
           String text = txtTotalPrice.getText();
        if (!text.isEmpty()) {
            boolean res = text.matches("[0-9]+[.]?[0-9]{0,2}");
            if (!res) {
                txtTotalPrice.setText(text.substring(0, text.length() - 1));
            }
        }
    }//GEN-LAST:event_txtTotalPriceKeyReleased

    private void txtQutAndHandKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQutAndHandKeyReleased
             String text = txtQutAndHand.getText();
        if (!text.isEmpty()) {
            boolean res = text.matches("[0-9]+[.]?[0-9]{0,2}");
            if (!res) {
                txtQutAndHand.setText(text.substring(0, text.length() - 1));
            }
        }
    }//GEN-LAST:event_txtQutAndHandKeyReleased

    private void txtPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyReleased
              String text = txtPrice.getText();
        if (!text.isEmpty()) {
            boolean res = text.matches("[0-9]+[.]?[0-9]{0,2}");
            if (!res) {
                txtPrice.setText(text.substring(0, text.length() - 1));
            }
        }
    }//GEN-LAST:event_txtPriceKeyReleased

    private void txtContactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyReleased
       char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
        }
        String txt = txtContact.getText();
        int caretPosition = txtContact.getCaretPosition();
        if (!txt.matches("^[0-9]{0,10}$")) {
            txt = txt.substring(0, caretPosition - 1) + txt.substring(caretPosition);
            txtContact.setText(txt);
            txtContact.setCaretPosition(caretPosition - 1);
        }
    }//GEN-LAST:event_txtContactKeyReleased

    private void tblSeatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSeatMouseClicked
        tblSeat.setDefaultEditor(Object.class, null);
    }//GEN-LAST:event_tblSeatMouseClicked

    private void mealTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mealTableMouseClicked
        mealTable.setDefaultEditor(Object.class, null);
    }//GEN-LAST:event_mealTableMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butPrint;
    private javax.swing.JButton butRefresh;
    private javax.swing.JButton butRemove;
    private javax.swing.JComboBox<String> comboMial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblA1;
    private javax.swing.JLabel lblA10;
    private javax.swing.JLabel lblA11;
    private javax.swing.JLabel lblA12;
    private javax.swing.JLabel lblA13;
    private javax.swing.JLabel lblA14;
    private javax.swing.JLabel lblA15;
    private javax.swing.JLabel lblA16;
    private javax.swing.JLabel lblA17;
    private javax.swing.JLabel lblA18;
    private javax.swing.JLabel lblA19;
    private javax.swing.JLabel lblA2;
    private javax.swing.JLabel lblA20;
    private javax.swing.JLabel lblA21;
    private javax.swing.JLabel lblA22;
    private javax.swing.JLabel lblA23;
    private javax.swing.JLabel lblA24;
    private javax.swing.JLabel lblA3;
    private javax.swing.JLabel lblA4;
    private javax.swing.JLabel lblA5;
    private javax.swing.JLabel lblA6;
    private javax.swing.JLabel lblA7;
    private javax.swing.JLabel lblA8;
    private javax.swing.JLabel lblA9;
    private javax.swing.JLabel lblB1;
    private javax.swing.JLabel lblB10;
    private javax.swing.JLabel lblB11;
    private javax.swing.JLabel lblB12;
    private javax.swing.JLabel lblB13;
    private javax.swing.JLabel lblB14;
    private javax.swing.JLabel lblB15;
    private javax.swing.JLabel lblB16;
    private javax.swing.JLabel lblB17;
    private javax.swing.JLabel lblB18;
    private javax.swing.JLabel lblB19;
    private javax.swing.JLabel lblB2;
    private javax.swing.JLabel lblB20;
    private javax.swing.JLabel lblB21;
    private javax.swing.JLabel lblB22;
    private javax.swing.JLabel lblB23;
    private javax.swing.JLabel lblB24;
    private javax.swing.JLabel lblB3;
    private javax.swing.JLabel lblB4;
    private javax.swing.JLabel lblB5;
    private javax.swing.JLabel lblB6;
    private javax.swing.JLabel lblB7;
    private javax.swing.JLabel lblB8;
    private javax.swing.JLabel lblB9;
    private javax.swing.JLabel lblBb1;
    private javax.swing.JLabel lblBb2;
    private javax.swing.JLabel lblBb3;
    private javax.swing.JLabel lblBb4;
    private javax.swing.JLabel lblBb5;
    private javax.swing.JLabel lblBb6;
    private javax.swing.JLabel lblD;
    private javax.swing.JLabel lblMovieID;
    private javax.swing.JLabel lblMovieName;
    private javax.swing.JLabel lblOb1;
    private javax.swing.JLabel lblOb16;
    private javax.swing.JLabel lblOb2;
    private javax.swing.JLabel lblOb3;
    private javax.swing.JLabel lblOb4;
    private javax.swing.JLabel lblOb5;
    private javax.swing.JLabel lblPrint;
    private javax.swing.JLabel lblQty;
    private javax.swing.JLabel lblRID;
    private javax.swing.JLabel lblT;
    private javax.swing.JTable mealTable;
    private javax.swing.JPanel pnlODC;
    private javax.swing.JTable tblSeat;
    private javax.swing.JTextField txtBlance;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtIDnumber;
    private javax.swing.JTextField txtMealName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPayment;
    private javax.swing.JTextField txtPaymentId;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQutAndHand;
    private javax.swing.JTextField txtResID;
    private javax.swing.JTextField txtSeatCount;
    private javax.swing.JTextField txtTotalPrice;
    // End of variables declaration//GEN-END:variables

    private void GeneratoeCustomerID() {
        String customerId;
        try {
            customerId = IDGenerator.getNewID("customer", "CustID", "C");
            txtIDnumber.setText(customerId);
        } catch (SQLException ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void GeneratoePaymentID() {
        try {
            String paymentID;
            paymentID = IDGenerator.getNewID("payment", "PeyID", "PI");
            txtPaymentId.setText(paymentID);
        } catch (SQLException ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void GeneraterResvation() {
        String rivaId;
        try {
            rivaId = IDGenerator.getNewID("reservation", "RID", "R");
            txtResID.setText(rivaId);
        } catch (SQLException ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void Stock() {

        String mealID = (String) comboMial.getSelectedItem();

        try {
            MealDTO meil = ManageMealController.serchMail(mealID);
            if (meil != null) {
                txtMealName.setText(meil.getMealName());
                txtPrice.setText("" + meil.getUnitPrice());
                lblQty.setText("" + meil.getQty());
                txtQutAndHand.requestFocusInWindow();

            }
            int qty = Integer.parseInt(lblQty.getText());
            if (qty < 10) {
                JOptionPane.showMessageDialog(null, "PLESS FILL YOUR STOCK..");

            }
        } catch (Exception ex) {
            Logger.getLogger(BookingSeet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

}
