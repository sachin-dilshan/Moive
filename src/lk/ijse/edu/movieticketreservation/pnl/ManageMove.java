/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.edu.movieticketreservation.pnl;


import java.awt.Color;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import lk.ijse.edu.movieticketreservation.business.custom.Impl.CategoryBOImpl;
import lk.ijse.edu.movieticketreservation.controller.ManageCategoryController;
import lk.ijse.edu.movieticketreservation.controller.ManageMovieController;
import lk.ijse.edu.movieticketreservation.entity.Category;
import lk.ijse.edu.movieticketreservation.mdel.CategortDTO;
import lk.ijse.edu.movieticketreservation.mdel.MovieDTO;
import lk.ijse.edu.movieticketresevation.Generator.IDGenerator;

/**
 *
 * @author sachin dilshan
 */
public class ManageMove extends javax.swing.JPanel {

    private boolean update = false;

    /**
     * Creates new form ManageMove
     */
    public ManageMove() {
        try {
            initComponents();
            loodAllMovie();
            loodAllCategoryId();
            genareteMovieId();

            tblMoveDetails.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {

                    if (tblMoveDetails.getSelectedRow() == -1) {
                        return;
                    }
                    txtId.setText((String) tblMoveDetails.getValueAt(tblMoveDetails.getSelectedRow(), 0));
                    txtName.setText((String) tblMoveDetails.getValueAt(tblMoveDetails.getSelectedRow(), 2));
                    txtLanguage.setText((String) tblMoveDetails.getValueAt(tblMoveDetails.getSelectedRow(), 3));
//                    dtcOne.setText((String) tblMoveDetails.getValueAt(tblMoveDetails.getSelectedRow(), 4));
//                    clossDate.setText((String) tblMoveDetails.getValueAt(tblMoveDetails.getSelectedRow(), 5));
                }
            });

        } catch (Exception ex) {
            Logger.getLogger(ManageMove.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        comboCtegoryId = new javax.swing.JComboBox<>();
        txtCategory = new javax.swing.JTextField();
        dtcOne = new com.toedter.calendar.JDateChooser();
        clossDate = new com.toedter.calendar.JDateChooser();
        jLocaleChooser1 = new com.toedter.components.JLocaleChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMoveDetails = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        butAdd = new javax.swing.JButton();
        txtLanguage = new javax.swing.JTextField();
        butDeletr = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        updateVoice = new javax.swing.JLabel();
        deleteVoic = new javax.swing.JLabel();
        addSound = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Move ID           :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Move Name       :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("category ID     :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Category           :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Starting Date   :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Closing Date     :");

        txtName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Language          :");

        txtId.setEditable(false);
        txtId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        comboCtegoryId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        comboCtegoryId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboCtegoryIdItemStateChanged(evt);
            }
        });

        txtCategory.setEditable(false);
        txtCategory.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(28, 28, 28)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(34, 34, 34)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel10))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLocaleChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(57, 57, 57))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboCtegoryId, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(dtcOne, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                .addComponent(clossDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(jLabel3))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboCtegoryId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jLocaleChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dtcOne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(clossDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 790, 270));

        tblMoveDetails.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblMoveDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie ID ", "Category ", "Movie Name  ", "Language  ", "StartDate ", "EndDate  "
            }
        ));
        tblMoveDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMoveDetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMoveDetails);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 940, 150));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/edu/movieticketreservation/img/icons8_Tape_Drive_100px.png"))); // NOI18N
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, 100, 60));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/edu/movieticketreservation/img/icons8_Documentary_100px.png"))); // NOI18N
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 100, 90));

        jLabel12.setFont(new java.awt.Font("Engravers MT", 1, 30)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Manage Movie");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, 340, -1));

        butAdd.setBackground(new java.awt.Color(46, 204, 113));
        butAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        butAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/edu/movieticketreservation/img/icons8_Save_40px.png"))); // NOI18N
        butAdd.setText("Add");
        butAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddActionPerformed(evt);
            }
        });
        jPanel1.add(butAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 590, 110, 40));

        txtLanguage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLanguageActionPerformed(evt);
            }
        });
        txtLanguage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLanguageKeyReleased(evt);
            }
        });
        jPanel1.add(txtLanguage, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 620, 135, 28));

        butDeletr.setBackground(new java.awt.Color(46, 204, 113));
        butDeletr.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        butDeletr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/edu/movieticketreservation/img/icons8_Trash_40px.png"))); // NOI18N
        butDeletr.setText("Remove");
        butDeletr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDeletrActionPerformed(evt);
            }
        });
        jPanel1.add(butDeletr, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 590, -1, 40));

        jButton1.setBackground(new java.awt.Color(46, 204, 113));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/edu/movieticketreservation/img/icons8_Software_Installer_40px.png"))); // NOI18N
        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 590, -1, 40));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, 700));

        updateVoice.setText("Update Movie successfully");
        jPanel1.add(updateVoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 630, -1, -1));

        deleteVoic.setText("Delete Movie successfully");
        jPanel1.add(deleteVoic, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 600, -1, -1));

        addSound.setText("add Movie successfully");
        jPanel1.add(addSound, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 600, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 700));
    }// </editor-fold>//GEN-END:initComponents
        private static final String VOICENAME = "kevin16";

    private void clearTxt() {
//        dtcOne.setText("");
//        clossDate.setText("");
        txtName.setText("");
        txtLanguage.setText("");
    }
    private void comboCtegoryIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboCtegoryIdItemStateChanged
        try {
            String categaryId = (String) comboCtegoryId.getSelectedItem();
            CategortDTO categoy = new ManageCategoryController().getCategoryName(categaryId);
            if (categoy != null) {
                txtCategory.setText(categoy.getCategoryName());
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageMove.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_comboCtegoryIdItemStateChanged

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        txtName.requestFocusInWindow();
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        dtcOne.requestFocusInWindow();
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLanguageActionPerformed
        try {
            String moveId = txtId.getText();
            String category = txtCategory.getText();
            String moveName = txtName.getText();
            String language = txtLanguage.getText();
        } catch (Exception ex) {
            Logger.getLogger(ManageMove.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtLanguageActionPerformed

    private void butAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddActionPerformed

        try {

            Date startDate = dtcOne.getDate();
            String start = DateFormat.getDateInstance().format(startDate);

            Date endDate = clossDate.getDate();
            String end = DateFormat.getDateInstance().format(endDate);
           
            String movieId = txtId.getText();
            String categoryId = (String) comboCtegoryId.getSelectedItem();

            String moviName = txtName.getText();
            String language = txtLanguage.getText();
            MovieDTO movie = new MovieDTO(movieId, categoryId, moviName, language, start, end);
            boolean isAdd = ManageMovieController.addMovie(movie);
            loodAllMovie();
            clearTxt();
        } catch (Exception ex) {
            Logger.getLogger(ManageMove.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }//GEN-LAST:event_butAddActionPerformed

    private void butDeletrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDeletrActionPerformed
        if (tblMoveDetails.getSelectedRow() == -1) {
            return;
        }
        {
            try {
                boolean result = ManageMovieController.deleteMovie(tblMoveDetails.getValueAt(tblMoveDetails.getSelectedRow(), 0).toString());
                if (result) {
                    JOptionPane.showMessageDialog(this, "Movie has been deleted successfully");
                    loodAllMovie();
                    clearTxt();
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete the Movie");

                }
            } catch (Exception ex) {
                Logger.getLogger(ManageMove.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
      
    }//GEN-LAST:event_butDeletrActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        try {
//            String categoryId = (String) comboCtegoryId.getSelectedItem();
//            MovieDTO movie = new MovieDTO(txtId.getText(),
//                    categoryId,
//                    txtName.getText(),
//                    txtLanguage.getText(),
                    //dtcOne.getText(),
                    //clossDate.getText());
//            boolean isUpdated = ManageMovieController.updateMove(movie);
//            if (isUpdated) {
//                DefaultTableModel dtm = (DefaultTableModel) tblMoveDetails.getModel();
//                dtm.setRowCount(0);
//                loodAllMovie();
//                JOptionPane.showMessageDialog(null, "Updated Successfully");
//           }
//        }
//        catch (Exception ex) {
//            Logger.getLogger(ManageMove.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        Voice voice;
//        VoiceManager vm = VoiceManager.getInstance();
//        voice = vm.getVoice(VOICENAME);
//        voice.allocate();
//        try {
//            voice.speak(updateVoice.getText());
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e);
//        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblMoveDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMoveDetailsMouseClicked
        tblMoveDetails.setDefaultEditor(Object.class, null);
    }//GEN-LAST:event_tblMoveDetailsMouseClicked

    private void txtLanguageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLanguageKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLanguageKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addSound;
    private javax.swing.JButton butAdd;
    private javax.swing.JButton butDeletr;
    private com.toedter.calendar.JDateChooser clossDate;
    private javax.swing.JComboBox<String> comboCtegoryId;
    private javax.swing.JLabel deleteVoic;
    private com.toedter.calendar.JDateChooser dtcOne;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private com.toedter.components.JLocaleChooser jLocaleChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable tblMoveDetails;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLanguage;
    private javax.swing.JTextField txtName;
    private javax.swing.JLabel updateVoice;
    // End of variables declaration//GEN-END:variables
// private boolean isValidDate(String input) {
//
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//        sdf.setLenient(false);
//        try {
//            Date parsedDate = sdf.parse(input);
//            String formattedDate = sdf.format(parsedDate);
//
//            if (formattedDate.equals(input)) {
//                return true;
//            }
//
//            return false;
//        } catch (ParseException ex) {
//            return false;
//        }
//    }

    private void loodAllCategoryId() {
        try {
            ArrayList<String> allCategoryId = ManageCategoryController.getAllCategoryId();
            for (String category : allCategoryId) {
                comboCtegoryId.addItem(category);
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageMove.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loodAllMovie() {
        try {
            ArrayList<MovieDTO> allMovie = ManageMovieController.getAllMovie();
            DefaultTableModel dtm = (DefaultTableModel) tblMoveDetails.getModel();
            dtm.setRowCount(0);
            for (MovieDTO movie : allMovie) {
                Object[] getRow = {movie.getMoveId(),
                    movie.getCategoryId(),
                    movie.getMoveName(),
                    movie.getLanguage(),
                    movie.getStartDate(),
                    movie.getEndDate()
                };
                dtm.addRow(getRow);
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageMove.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void genareteMovieId() {
        try {
            String movieId;
            movieId = IDGenerator.getNewID("move", "MovieID", "MVID");
            txtId.setText(movieId);
        } catch (SQLException ex) {
            Logger.getLogger(ManageMove.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageMove.class.getName()).log(Level.SEVERE, null, ex);
       
        }
    }
}
